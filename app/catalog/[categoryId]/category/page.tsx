import Catalog from "@/app/components/catalog-page/Catalog";
import { fetchCategories, SYSTEM_SALE_CATEGORY_ID, SYSTEM_TOP_CATEGORY_ID } from "@/app/lib/api/apiRequests";
import { metaTagsValues } from "@/app/lib/seo/meta-tags-values";
import { Metadata } from "next";

type Props = {
    params: {
        categoryId: string;
    };
};

export async function generateMetadata({ params }: Props): Promise<Metadata> {
    const categories = await fetchCategories();
    const activeCategory = categories.find((category) => category.id === Number(params.categoryId));

    if (!activeCategory) {
        return {
            title: "–ö–∞—Ç–µ–≥–æ—Ä—ñ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ",
            description: "–ù–∞ –∂–∞–ª—å, —Ç–∞–∫–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.",
        };
    }

    const imageUrl = getCategoryImagePath(activeCategory.id);
    const pageUrl = `https://piramidspace.com/catalog/${params.categoryId}/category`;
    const description =
        "–û–∑–Ω–∞–π–æ–º—Ç–µ—Å—å –∑ –Ω–∞–π–∫—Ä–∞—â–∏–º–∏ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è–º–∏ —Ü—ñ—î—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —ñ –æ–±–∏—Ä–∞–π—Ç–µ —Ç–µ, —â–æ —Å—Ç–≤–æ—Ä–µ–Ω–µ —Å–∞–º–µ –¥–ª—è –≤–∞—Å. üåü";

    return {
        title: `üõçÔ∏è ${activeCategory.name} ‚¨áÔ∏è`,
        description: `–¢–æ–≤–∞—Ä–∏ –∑ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó ${activeCategory.name}`,
        openGraph: {
            title: `üõçÔ∏è ${activeCategory.name} ‚¨áÔ∏è`,
            description,
            url: pageUrl,
            type: "website",
            locale: "uk_UA",
            siteName: `Piramidspace | –ü–∏—Ä–∞–º–∏–¥–∞ –¢–ü–ö ${metaTagsValues.shop_name}`,
            images: [
                {
                    url: imageUrl,
                    width: 1200, // —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ä–∞–∑–º–µ—Ä
                    height: 630,
                    alt: activeCategory.name,
                },
            ],
        },
        twitter: {
            card: "summary_large_image", // –∑–∞—Å—Ç–∞–≤–ª—è–µ–º Telegram –±—Ä–∞—Ç—å –±–æ–ª—å—à–æ–µ –ø—Ä–µ–≤—å—é
            title: `üõçÔ∏è ${activeCategory.name} ‚¨áÔ∏è`,
            description,
            images: [imageUrl],
        },
    };
}

function getCategoryImagePath(category: number) {
    const path = "https://piramidspace.com/assets/images/";

    switch (category) {
        case SYSTEM_TOP_CATEGORY_ID:
            return path + "meta-images/category-top.webp";
        case SYSTEM_SALE_CATEGORY_ID:
            return path + "meta-images/category-sale.webp";
        case 1:
            return path + "category-day-night.webp";
        case 2:
            return path + "category-roller-blinds.webp";
        case 3:
            return path + "category-horizontal-blinds.webp";
        case 4:
            return path + "category-vertical-blinds.webp";
        case 5:
            return path + "category-components.webp";
        case 6:
            return path + "category-promotional-items.webp";
        default:
            return path + "category-default-item.webp";
    }
}

function CatalogItems({ params }: { params: { categoryId: string } }) {
    return <Catalog activeCategoryId={params.categoryId} />;
}

export default CatalogItems;
